<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.2">
  <zoom_level>10</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>50</x>
      <y>160</y>
      <w>160</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>bg=yellow
QMcC
--
--
_+void main(String[] args)_
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>640</x>
      <y>10</y>
      <w>330</w>
      <h>210</h>
    </coordinates>
    <panel_attributes>RigaCop
--
-int nImplicante
-ArrayList&lt;Integer&gt; listMinT
--
+RigaCop(int nImplicante, ArrayList&lt;Integer&gt; minT)
+getM(int index)
+void delM(int mintermine)
+boolean hasM(int mintermine)
+boolean isEmpty()
+int getPIndex()
+int size()</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>310</x>
      <y>160</y>
      <w>220</w>
      <h>320</h>
    </coordinates>
    <panel_attributes>TabCopertura
--
-ArrayList&lt;RigaCop&gt; tab
-TabIndexP tabIP
-ArrayList&lt;Integer&gt; listAllMinT
-ArrayList&lt;byte[]&gt; finalP
--
+TabCopertura(DA DEFINIRE)
-boolean isEss(RigaCop P)
-boolean isMDom(int m)
-boolean isPDominated(RigaCop P)
-void delP(int pos)
-void delM(int M)
-void delMofP(int pos)
-void delVoidP();
-int nPforM(int m)
+boolean stepEss()
+boolean stepRowDom()
+boolean stepColDom()
+ArrayList&lt;byte[]&gt; copri()</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>610</x>
      <y>270</y>
      <w>190</w>
      <h>210</h>
    </coordinates>
    <panel_attributes>TabIndexP
--
-ArrayList&lt;RigaIndexP&gt; tab
--
+byte[] getP(int index)
+void delP(int pIndex)
+int length()

{innerclass
RigaIndexP
--
-int index
-byte[] P
--
+int getIndex()
+byte[] getP()
innerclass}

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>520</x>
      <y>60</y>
      <w>150</w>
      <h>150</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m1=1
m2=0..*</panel_attributes>
    <additional_attributes>10.0;130.0;120.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>520</x>
      <y>200</y>
      <w>110</w>
      <h>110</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-
m1=1
m2=1</panel_attributes>
    <additional_attributes>10.0;10.0;90.0;90.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>200</x>
      <y>170</y>
      <w>130</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-
m1=1
m2=1</panel_attributes>
    <additional_attributes>10.0;10.0;110.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>400</x>
      <y>540</y>
      <w>120</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>lt=.
balloonmarci

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>440</x>
      <y>460</y>
      <w>110</w>
      <h>100</h>
    </coordinates>
    <panel_attributes>lt=)-
m1=input for init
</panel_attributes>
    <additional_attributes>20.0;20.0;20.0;80.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>230</x>
      <y>500</y>
      <w>120</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>DA DEFINIRE
customelement=
drawArc(width-25,5,10,50,50,80,false) fg=red bg=red //Parameters (x, y, width, height, start, extent, open)
drawCircle(width-20,40,3) fg=red bg=red //Parameters (x, y, radius)</panel_attributes>
    <additional_attributes/>
  </element>
</diagram>
