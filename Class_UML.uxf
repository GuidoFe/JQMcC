<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.2">
  <zoom_level>10</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>0</x>
      <y>180</y>
      <w>160</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>bg=yellow
QMcC
--
--
_+void main(String[] args)_
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>590</x>
      <y>30</y>
      <w>330</w>
      <h>210</h>
    </coordinates>
    <panel_attributes>RigaCop
--
-int nImplicante
-byte[] implicante //ADD
-ArrayList&lt;Integer&gt; listMinT
--
+RigaCop(int nImplicante, ArrayList&lt;Integer&gt; minT)
+getM(int index)
+void delM(int mintermine)
+boolean hasM(int mintermine)
+boolean isEmpty()
+int getPIndex()
+int size()
+byte[] getP() //ADD</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>260</x>
      <y>180</y>
      <w>220</w>
      <h>320</h>
    </coordinates>
    <panel_attributes>TabCopertura
--
-ArrayList&lt;RigaCop&gt; tab
//-TabIndexP tabIP //DEL
-ArrayList&lt;Integer&gt; listAllMinT
-ArrayList&lt;byte[]&gt; finalP
--
+TabCopertura(DA DEFINIRE)
-boolean isEss(RigaCop P)
-boolean isMDom(int m)
-boolean isPDominated(RigaCop P)
-void delP(int pos)
-void delM(int M)
-void delMofP(int pos)
-void delVoidP();
-int nPforM(int m)
+boolean stepEss()
+boolean stepRowDom()
+boolean stepColDom()
+ArrayList&lt;byte[]&gt; copri()</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>470</x>
      <y>80</y>
      <w>150</w>
      <h>150</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m1=1
m2=0..*</panel_attributes>
    <additional_attributes>10.0;130.0;120.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>150</x>
      <y>190</y>
      <w>130</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-
m1=1
m2=1</panel_attributes>
    <additional_attributes>10.0;10.0;110.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>350</x>
      <y>560</y>
      <w>120</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>lt=.
balloonmarci

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>390</x>
      <y>480</y>
      <w>110</w>
      <h>100</h>
    </coordinates>
    <panel_attributes>lt=)-
m1=input for init
</panel_attributes>
    <additional_attributes>20.0;20.0;20.0;80.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>500</x>
      <y>530</y>
      <w>120</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>DA DEFINIRE
bg=red
customelement=
drawArc(width-25,5,10,50,50,80,false) fg=red bg=red //Parameters (x, y, width, height, start, extent, open)
drawCircle(width-20,40,3) fg=red bg=red //Parameters (x, y, radius)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>280</x>
      <y>70</y>
      <w>180</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>Da testare e da aggiungere
le funzioni di input e output</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLPackage</id>
    <coordinates>
      <x>250</x>
      <y>0</y>
      <w>710</w>
      <h>620</h>
    </coordinates>
    <panel_attributes>copertura
--
bg=cyan
layer=0</panel_attributes>
    <additional_attributes/>
  </element>
</diagram>
